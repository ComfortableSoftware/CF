Usage: kdialog [options] [arg]
KDialog can be used to show nice dialog boxes from shell scripts

Options:
  -h, --help                        Displays help on commandline options.
  --help-all                        Displays help including Qt specific
                                    options.
  -v, --version                     Displays version information.
  --author                          Show author information.
  --license                         Show license information.
  --desktopfile <file name>         The base file name of the desktop entry for
                                    this application.
  --yesno <text>                    Question message box with yes/no buttons
  --yesnocancel <text>              Question message box with yes/no/cancel
                                    buttons
  --warningyesno <text>             Warning message box with yes/no buttons
  --warningcontinuecancel <text>    Warning message box with continue/cancel
                                    buttons
  --warningyesnocancel <text>       Warning message box with yes/no/cancel
                                    buttons
  --ok-label <text>                 Use text as OK button label
  --yes-label <text>                Use text as Yes button label
  --no-label <text>                 Use text as No button label
  --cancel-label <text>             Use text as Cancel button label
  --continue-label <text>           Use text as Continue button label
  --sorry <text>                    'Sorry' message box
  --detailedsorry <text> <details>  'Sorry' message box with expandable Details
                                    field
  --error <text>                    'Error' message box
  --detailederror <text> <details>  'Error' message box with expandable Details
                                    field
  --msgbox <text>                   Message Box dialog
  --inputbox <text> <init>          Input Box dialog
  --imgbox <file>                   Image Box dialog
  --imginputbox <file> <text>       Image Box Input dialog
  --password <text>                 Password dialog
  --newpassword <text>              New Password dialog
  --textbox <file>                  Text Box dialog
  --textinputbox <text> <init>      Text Input Box dialog
  --combobox <text>                 ComboBox dialog
  --menu <text>                     Menu dialog
  --checklist <text>                Check List dialog
  --radiolist <text>                Radio List dialog
  --passivepopup <text> <timeout>   Passive Popup
  --icon <icon>                     Popup icon
  --getopenfilename                 File dialog to open an existing file
                                    (arguments [startDir] [filter])
  --getsavefilename                 File dialog to save a file (arguments
                                    [startDir] [filter])
  --getexistingdirectory            File dialog to select an existing directory
                                    (arguments [startDir])
  --getopenurl                      File dialog to open an existing URL
                                    (arguments [startDir] [filter])
  --getsaveurl                      File dialog to save a URL (arguments
                                    [startDir] [filter])
  --geticon                         Icon chooser dialog (arguments [group]
                                    [context])
  --progressbar <text>              Progress bar dialog, returns a D-Bus
                                    reference for communication
  --getcolor                        Color dialog to select a color
  --format <text>                   Allow --getcolor to specify output format
  --title <text>                    Dialog title
  --default <text>                  Default entry to use for combobox, menu,
                                    color, and calendar
  --multiple                        Allows the --getopenurl and
                                    --getopenfilename options to return multiple
                                    files
  --separate-output                 Return list items on separate lines (for
                                    checklist option and file open with
                                    --multiple)
  --print-winid                     Outputs the winId of each dialog
  --dontagain <file:entry>          Config file and option name for saving the
                                    "do-not-show/ask-again" state
  --slider <text>                   Slider dialog box, returns selected value
  --dateformat <text>               Date format for calendar result and/or
                                    default value (Qt-style); defaults to 'ddd
                                    MMM d yyyy'
  --calendar <text>                 Calendar dialog box, returns selected date
  --attach <winid>                  Makes the dialog transient for an X app
                                    specified by winid
  --embed <winid>                   A synonym for --attach
  --geometry <geometry>             Dialog geometry:
                                    [=][<width>{xX}<height>][{+-}<xoffset>{+-}<y
                                    offset>]

Arguments:
  [arg]                             Arguments - depending on main option





# shortcut to set a dialog property
set_dialog_property() {
    qdbus ${1} org.freedesktop.DBus.Properties.Set \
        org.kde.kdialog.ProgressDialog "${2}" "${3}" > /dev/null
}

# start the dialog and store the DBus service and object path for
# communication
dialog=$(kdialog --progressbar 'Doing something')

# set maximum value, used to calculate filling level
set_dialog_property "${dialog}" maximum 100
# enable automatical closing, once maximum value is reached.  If not
# enabled, the dialog must be closed manually using the
# org.kde.kdialog.ProgressDialog.close method.
set_dialog_property "${dialog}" autoClose true
# enable cancel button.  Note, that this button is *not* affected by the
# autoClose property.  The dialog *never* closes automatically, if the
# cancel button is pressed.
qdbus ${dialog} org.kde.kdialog.ProgressDialog.showCancelButton true > /dev/null

for ((counter=1; counter <= 100; counter++)); do
    # check if the dialog was cancelled, and exit the loop in this case
    cancelled=$(qdbus $dialog org.kde.kdialog.ProgressDialog.wasCancelled)
    if [[ "${cancelled}" == "true" ]]; then
        echo "cancelled"
        # manually close the dialog
        qdbus ${dialog} org.kde.kdialog.ProgressDialog.close > /dev/null
        exit 1
    fi
    sleep 1
    # refresh value and label
    set_dialog_property "${dialog}" value "${counter}"
        "Step ${counter}" > /dev/null
    qdbus ${dialog} org.kde.kdialog.ProgressDialog.setLabelText \
done





qdbus org.kde.kdialog-557592 "/" value 2



kdialog --title="hello" --progressbar "how are you" 5                                                                                                                                                                            ✘ 130
org.kde.kdialog-605714 /ProgressDialog



qdbus org.kde.kdialog-605714 /ProgressDialog org.kde.kdialog.ProgressDialog.setLabelText

qdbus org.kde.kdialog-605714 /ProgressDialog org.freedesktop.DBus.Properties.Set \
  org.kde.kdialog.ProgressDialog "value" "1" "Step 1"


works like a boss‼

kdialog --title="hello" --progressbar "how are you" 10

»»org.kde.kdialog-605714 /ProgressDialog
»»org.kde.kdialog-616463 /ProgressDialog

qdbus org.kde.kdialog-605714 /ProgressDialog org.kde.kdialog.ProgressDialog.value 2
qdbus org.kde.kdialog-616463 /ProgressDialog org.kde.kdialog.ProgressDialog.value 2
qdbus org.kde.kdialog-605714 /ProgressDialog org.kde.kdialog.ProgressDialog.wasCancelled
qdbus org.kde.kdialog-616463 /ProgressDialog org.kde.kdialog.ProgressDialog.close

Anything wrong returncode will be non zero





<!DOCTYPE node PUBLIC "-//freedesktop//DTD D-BUS Object Introspection 1.0//EN"
"http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">
<node>
  <interface name="org.kde.kdialog.ProgressDialog">
    <property name="maximum" type="i" access="readwrite"/>
    <property name="value" type="i" access="readwrite"/>
    <property name="autoClose" type="b" access="readwrite"/>
    <method name="setLabelText">
      <arg type="s" name="label" direction="in"/>
    </method>
    <method name="showCancelButton">
      <arg name="value" type="b" direction="in"/>
    </method>
    <method name="wasCancelled">
      <arg type="b" direction="out"/>
    </method>
    <method name="close"/>
  </interface>
</node>








